/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uts_adzibilal;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import org.jdatepicker.JDateComponentFactory;
import org.jdatepicker.JDatePicker;

/**
 *
 * @author LENOVO
 */
public class History extends javax.swing.JFrame {

    /**
     * Creates new form History
     */
    public History() {
        initComponents();
        initData();
    }
    
    private void initData() {
        // Kolom tabel
        String[] columns = {"Date", "Product", "Total"};

        // Model tabel
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable1.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        startDate = new com.toedter.calendar.JDateChooser();
        endDate = new com.toedter.calendar.JDateChooser();
        filterBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        filterBtn.setText("FILTER");
        filterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("REPORT TRANSACTION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(startDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(endDate, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addComponent(filterBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void filterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterBtnActionPerformed
        // TODO add your handling code here:
        // Mendapatkan tanggal mulai dan selesai dari komponen JDateChooser
        Date start = startDate.getDate();
        Date end = endDate.getDate();

        // Membuat objek untuk model tabel yang sudah ada
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Menghapus semua baris dari tabel
        model.setRowCount(0);
        
        // Kolom tabel
        String[] columns = {"Date", "Product", "Total"};

        // Mengisi ulang model tabel berdasarkan data yang difilter
        for (Object[] row : data) {
            // Mengambil tanggal dari baris data
            String dateString = (String) row[0];
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            try {
                // Parsing tanggal dari string menjadi objek Date
                Date transactionDate = format.parse(dateString);
                // Memeriksa apakah tanggal transaksi berada di antara tanggal mulai dan selesai yang dipilih
                if (transactionDate.after(start) && transactionDate.before(end)) {
                    // Jika ya, tambahkan baris data ke model tabel
                    model.addRow(row);
                }
            } catch (ParseException ex) {
                // Tangani jika terjadi kesalahan saat parsing tanggal
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_filterBtnActionPerformed

    // Data dummy transaksi
       Object[][] data = {
            {"2024-05-01", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-05-02", "Latte 2 - Americano 1", 22000},
            {"2024-05-03", "Mocha 1 - Macchiato 2", 21000},
            {"2024-05-04", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-05-05", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-05-06", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-05-07", "Latte 2 - Americano 1", 22000},
            {"2024-05-08", "Mocha 1 - Macchiato 2", 21000},
            {"2024-05-09", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-05-10", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-05-11", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-05-12", "Latte 2 - Americano 1", 22000},
            {"2024-05-13", "Mocha 1 - Macchiato 2", 21000},
            {"2024-05-14", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-05-15", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-05-16", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-05-17", "Latte 2 - Americano 1", 22000},
            {"2024-05-18", "Mocha 1 - Macchiato 2", 21000},
            {"2024-05-19", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-05-20", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-05-21", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-05-22", "Latte 2 - Americano 1", 22000},
            {"2024-05-23", "Mocha 1 - Macchiato 2", 21000},
            {"2024-05-24", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-05-25", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-05-26", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-05-27", "Latte 2 - Americano 1", 22000},
            {"2024-05-28", "Mocha 1 - Macchiato 2", 21000},
            {"2024-05-29", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-05-30", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-05-31", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-06-01", "Latte 2 - Americano 1", 22000},
            {"2024-06-02", "Mocha 1 - Macchiato 2", 21000},
            {"2024-06-03", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-06-04", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-06-05", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-06-06", "Latte 2 - Americano 1", 22000},
            {"2024-06-07", "Mocha 1 - Macchiato 2", 21000},
            {"2024-06-08", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-06-09", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-06-10", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-06-11", "Latte 2 - Americano 1", 22000},
            {"2024-06-12", "Mocha 1 - Macchiato 2", 21000},
            {"2024-06-13", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-06-14", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-06-15", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-06-16", "Latte 2 - Americano 1", 22000},
            {"2024-06-17", "Mocha 1 - Macchiato 2", 21000},
            {"2024-06-18", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-06-19", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-06-20", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-06-21", "Latte 2 - Americano 1", 22000},
            {"2024-06-22", "Mocha 1 - Macchiato 2", 21000},
            {"2024-06-23", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-06-24", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-06-25", "Espresso 1 - Cappuccino 2", 20000},
            {"2024-06-26", "Latte 2 - Americano 1", 22000},
            {"2024-06-27", "Mocha 1 - Macchiato 2", 21000},
            {"2024-06-28", "Cappuccino 2 - Espresso 1", 20000},
            {"2024-06-29", "Caramel Macchiato 1 - Flat White 2", 23000},
            {"2024-06-30", "Espresso 1 - Cappuccino 2", 20000},
        };
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new History().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JButton filterBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser startDate;
    // End of variables declaration//GEN-END:variables
}
